<xsd:schema
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://www.senior.com.br/furb/basico"
    targetNamespace="http://www.senior.com.br/furb/basico"
    elementFormDefault="qualified">
    
    <xsd:attribute name="deprecated" type="xsd:string" default=""/>
    <xsd:attribute name="anonymous" type="xsd:boolean" default="false"/>
    
    <xsd:attribute name="i18n" type="xsd:boolean" default="false"/>
    
    <!-- Public types -->
    <xsd:complexType name="aluno">
        <xsd:sequence>
            <xsd:element name="id" type="xsd:uuid" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="nome" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="dataNascimento" type="xsd:date" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="cpf" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="devedor" type="xsd:boolean" minOccurs="0" maxOccurs="1" default="false" readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="professor">
        <xsd:sequence>
            <xsd:element name="id" type="xsd:uuid" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="nome" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="dataNascimento" type="xsd:date" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="cpf" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="materia">
        <xsd:sequence>
            <xsd:element name="id" type="xsd:uuid" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="nome" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="turma">
        <xsd:sequence>
            <xsd:element name="id" type="xsd:uuid" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="materia" type="materia" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="professor" type="professor" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <!-- collection wrapper for alunos -->
            <xsd:element name="alunos" minOccurs="1" maxOccurs="1">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="item" type="aluno" minOccurs="1" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="vagas" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:simpleType name="userNotificationKind">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Operational"/>
            <xsd:enumeration value="Management"/>
            <xsd:enumeration value="News"/>
        </xsd:restriction>
     </xsd:simpleType>
    <xsd:simpleType name="userNotificationPriority">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Error"/>
            <xsd:enumeration value="Alert"/>
            <xsd:enumeration value="None"/>
        </xsd:restriction>
     </xsd:simpleType>
    <xsd:complexType name="notifyUserEventPayload">
        <xsd:sequence>
            <xsd:element name="notificationClass" type="xsd:string" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="notificationOrigin" type="xsd:string" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="notificationKind" type="userNotificationKind" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="notificationPriority" type="userNotificationPriority" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="notificationSubject" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="notificationContent" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="sourceDomain" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="sourceService" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="destinationUser" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="link" type="xsd:string" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:simpleType name="eventEmailFormat">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="HTML"/>
            <xsd:enumeration value="PLAIN_TEXT"/>
        </xsd:restriction>
     </xsd:simpleType>
    <xsd:complexType name="emailNotifyUserEventPayload">
        <xsd:complexContent>
            <xsd:extension base="notifyUserEventPayload">
                <xsd:sequence>
                    <xsd:element name="from" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                    </xsd:element>
                    <!-- collection wrapper for sendTo -->
                    <xsd:element name="sendTo" minOccurs="0" maxOccurs="1">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="item" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="format" type="eventEmailFormat" minOccurs="0" maxOccurs="1"  readOnly="false">
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="pushNotifyUserEventPayload">
        <xsd:complexContent>
            <xsd:extension base="notifyUserEventPayload">
                <xsd:sequence>
                    <xsd:element name="applicationId" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="blobReference">
        <xsd:sequence>
            <xsd:element name="domainName" type="xsd:string" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="serviceName" type="xsd:string" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="targetObjectId" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="targetCopyId" type="xsd:string" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="basicErrorPayload">
        <xsd:sequence>
            <xsd:element name="message" type="xsd:string" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="errorCode" type="xsd:string" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:simpleType name="fieldType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="BINARY"/>
            <xsd:enumeration value="BOOLEAN"/>
            <xsd:enumeration value="DATE"/>
            <xsd:enumeration value="DATETIME"/>
            <xsd:enumeration value="DOUBLE"/>
            <xsd:enumeration value="ENUM"/>
            <xsd:enumeration value="INTEGER"/>
            <xsd:enumeration value="MONEY"/>
            <xsd:enumeration value="STRING"/>
            <xsd:enumeration value="TIME"/>
        </xsd:restriction>
     </xsd:simpleType>
    <xsd:simpleType name="fileFormat">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="CSV"/>
            <xsd:enumeration value="FLAT"/>
            <xsd:enumeration value="JSON"/>
            <xsd:enumeration value="XML"/>
        </xsd:restriction>
     </xsd:simpleType>
    <xsd:simpleType name="hookFunction">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="BEFORE_PARSE"/>
            <xsd:enumeration value="BEFORE_CONVERSION"/>
            <xsd:enumeration value="ON_ERROR"/>
            <xsd:enumeration value="VALIDATE"/>
        </xsd:restriction>
     </xsd:simpleType>
    <xsd:simpleType name="eventType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="CHUNK"/>
            <xsd:enumeration value="DOWNLOAD"/>
            <xsd:enumeration value="ERROR"/>
            <xsd:enumeration value="FINISH"/>
            <xsd:enumeration value="START"/>
        </xsd:restriction>
     </xsd:simpleType>
    <xsd:simpleType name="errorStrategy">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="CALL_SCRIPT"/>
            <xsd:enumeration value="IGNORE"/>
            <xsd:enumeration value="STOP"/>
        </xsd:restriction>
     </xsd:simpleType>
    <xsd:simpleType name="status">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DONE"/>
            <xsd:enumeration value="DONE_WITH_ERRORS"/>
            <xsd:enumeration value="DOWNLOADING"/>
            <xsd:enumeration value="ERROR"/>
            <xsd:enumeration value="NOT_STARTED"/>
            <xsd:enumeration value="RUNNING"/>
        </xsd:restriction>
     </xsd:simpleType>
    <xsd:simpleType name="errorType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="CONVERT_ERROR"/>
            <xsd:enumeration value="SERVICE_ERROR"/>
        </xsd:restriction>
     </xsd:simpleType>
    <xsd:complexType name="importError">
        <xsd:sequence>
            <xsd:element name="errorType" type="errorType" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="lineNumber" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="bean" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="exceptionClass" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="fielddto">
        <xsd:sequence>
            <xsd:element name="id" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="name" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="fieldType" type="fieldType" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="start" type="xsd:long" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="size" type="xsd:long" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="maskPattern" type="xsd:string" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="hookdto">
        <xsd:sequence>
            <xsd:element name="hookFunction" type="hookFunction" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="script" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="layoutdto">
        <xsd:sequence>
            <xsd:element name="id" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="description" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="fileFormat" type="fileFormat" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="errorStrategy" type="errorStrategy" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="delimiter" type="xsd:string" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="skipLines" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <!-- collection wrapper for fields -->
            <xsd:element name="fields" minOccurs="1" maxOccurs="1">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="item" type="fielddto" minOccurs="1" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <!-- collection wrapper for hooks -->
            <xsd:element name="hooks" minOccurs="0" maxOccurs="1">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="item" type="hookdto" minOccurs="0" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="importReport">
        <xsd:sequence>
            <xsd:element name="id" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="startTime" type="xsd:dateTime" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="endTime" type="xsd:dateTime" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="uri" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="beanClass" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="serviceClass" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="layout" type="layoutdto" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="sucessCount" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="errorsCount" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="filteredCount" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="skippedCount" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <!-- collection wrapper for importErrors -->
            <xsd:element name="importErrors" minOccurs="0" maxOccurs="1">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="item" type="importError" minOccurs="0" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="exportEventStatus">
        <xsd:sequence>
            <xsd:element name="importerId" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="eventType" type="eventType" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="recordCount" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="importEventStatus">
        <xsd:sequence>
            <xsd:element name="importerId" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="eventType" type="eventType" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="status" type="status" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="errorMessage" type="xsd:string" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="recordCount" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="importReport" type="importReport" minOccurs="0" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="exportConfig">
        <xsd:sequence>
            <xsd:element name="uri" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="layout" type="layoutdto" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="async" type="xsd:boolean" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="errorStrategy" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="importConfig">
        <xsd:sequence>
            <xsd:element name="uri" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="layout" type="layoutdto" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="async" type="xsd:boolean" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="batchSize" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="errorStrategy" type="errorStrategy" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="dependency">
        <xsd:sequence>
            <xsd:element name="domain" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="service" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
            <xsd:element name="version" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:simpleType name="uuid">
        <xsd:restriction base="xsd:string">
        	<xsd:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}" />
        </xsd:restriction>
     </xsd:simpleType>
    
    <!-- Message payload elements for signals -->
    
    <!-- Message input/output elements for commands -->
    <xsd:element name="createBulkTurma">
        <xsd:complexType>
            <xsd:sequence>
                <!-- collection wrapper for entities -->
                <xsd:element name="entities" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="turma" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createBulkTurmaOutput">
        <xsd:complexType>
            <xsd:sequence>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createMergeTurma">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="updateAluno">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="listProfessor">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="offset" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <xsd:element name="size" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <xsd:element name="orderBy" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <xsd:element name="filter" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <!-- collection wrapper for displayFields -->
                <xsd:element name="displayFields" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="listProfessorOutput">
        <xsd:complexType>
            <xsd:sequence>
                <!-- collection wrapper for contents -->
                <xsd:element name="contents" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="professor" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createBulkMateria">
        <xsd:complexType>
            <xsd:sequence>
                <!-- collection wrapper for entities -->
                <xsd:element name="entities" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="materia" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createBulkMateriaOutput">
        <xsd:complexType>
            <xsd:sequence>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="listTurma">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="offset" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <xsd:element name="size" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <xsd:element name="orderBy" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <xsd:element name="filter" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <!-- collection wrapper for displayFields -->
                <xsd:element name="displayFields" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="listTurmaOutput">
        <xsd:complexType>
            <xsd:sequence>
                <!-- collection wrapper for contents -->
                <xsd:element name="contents" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="turma" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createMateria">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="deleteMateria">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:uuid" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="exportProfessor">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="config" type="exportConfig" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="exportProfessorOutput">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="exportJobId" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="updateMergeProfessor">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="updateMergeMateria">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="exportTurma">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="config" type="exportConfig" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="exportTurmaOutput">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="exportJobId" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createProfessor">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="createBulkAluno">
        <xsd:complexType>
            <xsd:sequence>
                <!-- collection wrapper for entities -->
                <xsd:element name="entities" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="aluno" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createBulkAlunoOutput">
        <xsd:complexType>
            <xsd:sequence>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="updateProfessor">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="listMateria">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="offset" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <xsd:element name="size" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <xsd:element name="orderBy" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <xsd:element name="filter" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <!-- collection wrapper for displayFields -->
                <xsd:element name="displayFields" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="listMateriaOutput">
        <xsd:complexType>
            <xsd:sequence>
                <!-- collection wrapper for contents -->
                <xsd:element name="contents" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="materia" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="importMateria">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="config" type="importConfig" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="importMateriaOutput">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="importJobId" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="importAluno">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="config" type="importConfig" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="importAlunoOutput">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="importJobId" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getMetadata">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="metadataFormat" type="xsd:string" minOccurs="0" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getMetadataOutput">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="metadata" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="retrieveAluno">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:uuid" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createAluno">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="getDependencies">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="getDependenciesOutput">
        <xsd:complexType>
            <xsd:sequence>
                <!-- collection wrapper for dependencies -->
                <xsd:element name="dependencies" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="dependency" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="exportMateria">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="config" type="exportConfig" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="exportMateriaOutput">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="exportJobId" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createBulkProfessor">
        <xsd:complexType>
            <xsd:sequence>
                <!-- collection wrapper for entities -->
                <xsd:element name="entities" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="professor" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createBulkProfessorOutput">
        <xsd:complexType>
            <xsd:sequence>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="updateMateria">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="createMergeProfessor">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="updateTurma">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="createMergeMateria">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="exportAluno">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="config" type="exportConfig" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="exportAlunoOutput">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="exportJobId" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="updateMergeTurma">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="listAluno">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="offset" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <xsd:element name="size" type="xsd:long" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <xsd:element name="orderBy" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <xsd:element name="filter" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
                <!-- collection wrapper for displayFields -->
                <xsd:element name="displayFields" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="listAlunoOutput">
        <xsd:complexType>
            <xsd:sequence>
                <!-- collection wrapper for contents -->
                <xsd:element name="contents" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="item" type="aluno" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createTurma">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="createMergeAluno">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="importTurma">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="config" type="importConfig" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="importTurmaOutput">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="importJobId" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="retrieveTurma">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:uuid" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="updateMergeAluno">
        <xsd:complexType/>
    </xsd:element>
    <xsd:element name="retrieveMateria">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:uuid" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="deleteAluno">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:uuid" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="deleteProfessor">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:uuid" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="retrieveProfessor">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:uuid" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="deleteTurma">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:uuid" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="helloWorld">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="who" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="helloWorldOutput">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="helloWorldMessage" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="importProfessor">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="config" type="importConfig" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="importProfessorOutput">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="importJobId" type="xsd:string" minOccurs="1" maxOccurs="1"  readOnly="false">
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>
